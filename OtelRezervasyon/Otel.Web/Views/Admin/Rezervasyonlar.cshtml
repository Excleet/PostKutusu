@model IEnumerable<Otel.Entity.DTOs.RezervasyonDto>
@{
    ViewData["Title"] = "Rezervasyonlar";
    Layout = "_AdminLayout";
}

<div class="dashboard-header">
    <h1>Rezervasyonlar</h1>
    <p>Tüm rezervasyonları görüntüleyin ve yönetin</p>
</div>

<!-- Filtreleme -->
<div class="filter-section">
    <div class="filter-card">
        <form method="get" class="filter-form">
            <div class="filter-row">
                <div class="filter-group">
                    <label for="durum">Durum:</label>
                    <select name="durum" id="durum">
                        <option value="">Tümü</option>
                        <option value="onayli" @(ViewBag.Durum == "onayli" ? "selected" : "")>Onaylı</option>
                        <option value="onaysiz" @(ViewBag.Durum == "onaysiz" ? "selected" : "")>Onaysız</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="baslangicTarihi">Başlangıç Tarihi:</label>
                    <input type="date" name="baslangicTarihi" id="baslangicTarihi" value="@ViewBag.BaslangicTarihi?.ToString("yyyy-MM-dd")">
                </div>
                <div class="filter-group">
                    <label for="bitisTarihi">Bitiş Tarihi:</label>
                    <input type="date" name="bitisTarihi" id="bitisTarihi" value="@ViewBag.BitisTarihi?.ToString("yyyy-MM-dd")">
                </div>
                <div class="filter-group">
                    <button type="submit" class="btn btn-primary">Filtrele</button>
                    <a href="@Url.Action("Rezervasyonlar")" class="btn btn-secondary">Temizle</a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Rezervasyonlar Tablosu -->
<div class="table-responsive">
    <table class="data-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Ad Soyad</th>
                <th>Email</th>
                <th>Telefon</th>
                <th>Giriş Tarihi</th>
                <th>Çıkış Tarihi</th>
                <th>Gece Sayısı</th>
                <th>Oda Tipi</th>
                <th>Misafir Sayısı</th>
                <th>Durum</th>
                <th>Oluşturma Tarihi</th>
                <th>İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var rezervasyon in Model)
                {
                    <tr>
                        <td>@rezervasyon.Id</td>
                        <td>@rezervasyon.AdSoyad</td>
                        <td>@rezervasyon.Email</td>
                        <td>@rezervasyon.Telefon</td>
                        <td>@rezervasyon.GirisTarihi.ToString("dd.MM.yyyy")</td>
                        <td>@rezervasyon.CikisTarihi.ToString("dd.MM.yyyy")</td>
                        <td>@rezervasyon.GeceSayisi gece</td>
                        <td>@rezervasyon.OdaTipi</td>
                        <td>@rezervasyon.MisafirSayisi kişi</td>
                        <td>
                            @if (rezervasyon.OnayDurumu)
                            {
                                <span class="status status-approved">Onaylı</span>
                            }
                            else
                            {
                                <span class="status status-pending">Beklemede</span>
                            }
                        </td>
                        <td>@rezervasyon.OlusturmaTarihi.ToString("dd.MM.yyyy HH:mm")</td>
                        <td>
                            <div class="action-buttons">
                                <a href="@Url.Action("RezervasyonDetay", new { id = rezervasyon.Id })" 
                                   class="btn btn-sm btn-info" title="Detay">
                                    <i class="fas fa-eye"></i>
                                </a>
                                @if (!rezervasyon.OnayDurumu)
                                {
                                    <form asp-controller="Admin" asp-action="OnaylaRezervasyonuFromList" method="post" style="display: inline;">
                                        <input type="hidden" name="id" value="@rezervasyon.Id" />
                                        <button type="submit" class="btn btn-sm btn-success" title="Onayla">
                                            <i class="fas fa-check"></i>
                                        </button>
                                    </form>
                                }
                                <form asp-controller="Admin" asp-action="SilRezervasyonuFromList" method="post" style="display: inline;"
                                      onsubmit="return confirm('Bu rezervasyonu silmek istediğinizden emin misiniz?')">
                                    <input type="hidden" name="id" value="@rezervasyon.Id" />
                                    <button type="submit" class="btn btn-sm btn-danger" title="Sil">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="12" style="text-align: center; padding: 40px;">
                        <i class="fas fa-calendar-times" style="font-size: 48px; color: #ccc; margin-bottom: 15px;"></i>
                        <p style="color: #666; font-size: 16px;">Henüz rezervasyon bulunmuyor.</p>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Sayfalama -->
@if (ViewBag.TotalPages > 1)
{
    <div class="pagination-container">
        <div class="pagination">
            @if (ViewBag.CurrentPage > 1)
            {
                <a href="@Url.Action("Rezervasyonlar", new { 
                    page = ViewBag.CurrentPage - 1, 
                    durum = ViewBag.Durum, 
                    baslangicTarihi = ViewBag.BaslangicTarihi?.ToString("yyyy-MM-dd"),
                    bitisTarihi = ViewBag.BitisTarihi?.ToString("yyyy-MM-dd")
                })" class="btn btn-sm btn-secondary">« Önceki</a>
            }

            @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
            {
                if (i == ViewBag.CurrentPage)
                {
                    <span class="btn btn-sm btn-primary">@i</span>
                }
                else
                {
                    <a href="@Url.Action("Rezervasyonlar", new { 
                        page = i, 
                        durum = ViewBag.Durum, 
                        baslangicTarihi = ViewBag.BaslangicTarihi?.ToString("yyyy-MM-dd"),
                        bitisTarihi = ViewBag.BitisTarihi?.ToString("yyyy-MM-dd")
                    })" class="btn btn-sm btn-secondary">@i</a>
                }
            }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <a href="@Url.Action("Rezervasyonlar", new { 
                    page = ViewBag.CurrentPage + 1, 
                    durum = ViewBag.Durum, 
                    baslangicTarihi = ViewBag.BaslangicTarihi?.ToString("yyyy-MM-dd"),
                    bitisTarihi = ViewBag.BitisTarihi?.ToString("yyyy-MM-dd")
                })" class="btn btn-sm btn-secondary">Sonraki »</a>
            }
        </div>
        <div class="pagination-info">
            Sayfa @ViewBag.CurrentPage / @ViewBag.TotalPages
        </div>
    </div>
}

<style>
.filter-section {
    margin-bottom: 30px;
}

.filter-card {
    background: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.filter-form {
    margin: 0;
}

.filter-row {
    display: flex;
    gap: 20px;
    align-items: end;
    flex-wrap: wrap;
}

.filter-group {
    display: flex;
    flex-direction: column;
    min-width: 150px;
}

.filter-group label {
    margin-bottom: 5px;
    font-weight: 600;
    color: #2c3e50;
}

.filter-group input,
.filter-group select {
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
}

.pagination-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 30px;
    padding: 20px;
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.pagination {
    display: flex;
    gap: 5px;
}

.pagination-info {
    color: #666;
    font-size: 14px;
}

@@media (max-width: 768px) {
    .filter-row {
        flex-direction: column;
        align-items: stretch;
    }
    
    .filter-group {
        min-width: auto;
    }
    
    .pagination-container {
        flex-direction: column;
        gap: 15px;
    }
}
</style>
